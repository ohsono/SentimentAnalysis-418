services:
  # Extends the main docker-compose.yml with monitoring services
  
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: ucla-sentiment-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - sentiment-network
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ucla-sentiment-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=sentiment_admin_2024
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - sentiment-network
    restart: unless-stopped

  # Streamlit Dashboard (optional)
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: ucla-sentiment-dashboard
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8888
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - ./app/dashboard:/app/dashboard
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - sentiment-network

# Additional volumes for monitoring
volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# Networks (shared with main compose)
networks:
  sentiment-network:
    external: true
