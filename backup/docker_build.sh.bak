#!/bin/bash

# UCLA Sentiment Analysis - Docker Build Script
# Builds both API and Model Service containers

set -e

echo "üê≥ UCLA Sentiment Analysis - Docker Build Script"
echo "================================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
API_IMAGE="ucla-sentiment-api"
MODEL_SERVICE_IMAGE="ucla-sentiment-model-service"
TAG="latest"

echo -e "${BLUE}Building lightweight API container...${NC}"
docker build -f Dockerfile.api -t ${API_IMAGE}:${TAG} .

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ API container built successfully${NC}"
else
    echo -e "${RED}‚ùå API container build failed${NC}"
    exit 1
fi

echo -e "${BLUE}Building model service container...${NC}"
docker build -f Dockerfile.model-service -t ${MODEL_SERVICE_IMAGE}:${TAG} .

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Model service container built successfully${NC}"
else
    echo -e "${RED}‚ùå Model service container build failed${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}üéâ All containers built successfully!${NC}"
echo ""
echo "üìä Container Information:"
docker images | grep -E "${API_IMAGE}|${MODEL_SERVICE_IMAGE}"

echo ""
echo "üöÄ Next steps:"
echo "‚Ä¢ Run with Docker Compose: docker-compose up"
echo "‚Ä¢ Or run individually:"
echo "  - API: docker run -p 8080:8080 ${API_IMAGE}:${TAG}"
echo "  - Model Service: docker run -p 8081:8081 ${MODEL_SERVICE_IMAGE}:${TAG}"

echo ""
echo "üìö Access points when running:"
echo "‚Ä¢ API: http://localhost:8080"
echo "‚Ä¢ API Docs: http://localhost:8080/docs"
echo "‚Ä¢ Model Service: http://localhost:8081"
echo "‚Ä¢ Model Service Docs: http://localhost:8081/docs"
