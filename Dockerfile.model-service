FROM python:3.11-slim

WORKDIR /app

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV MODEL_CACHE_DIR=/app/models
ENV NLTK_DATA=/app/nltk_data

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gcc \
        g++ \
        curl \
        wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy requirements and install
COPY requirements_model_service_distilbert.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements_model_service_distilbert.txt
RUN pip3 install --no-cache-dir -r requirements_model_service_distilbert.txt


# Create directories with proper permissions
RUN mkdir -p /app/models /app/logs /app/nltk_data && \
    chmod -R 755 /app/models /app/logs /app/nltk_data

# Download NLTK data as root first
RUN python -c "import nltk; nltk.download('vader_lexicon', download_dir='/app/nltk_data', quiet=True)"

# Copy application code
COPY model_services/ ./model_services/
COPY requirements*.txt ./

# Create entrypoint script
RUN echo '#!/bin/bash\n\
echo "🚀 Starting Model Service..."\n\
echo "📁 Model cache dir: $MODEL_CACHE_DIR"\n\
echo "🔍 Checking permissions..."\n\
ls -la /app/models || echo "Creating models directory..."\n\
mkdir -p /app/models /app/logs\n\
echo "✅ Starting service on port 8081"\n\
cd /app\n\
exec python -m model_services.fixed_model_service --host 0.0.0.0 --port 8081' > /app/entrypoint.sh && \
    chmod +x /app/entrypoint.sh

# Expose port
EXPOSE 8081

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8081/health || exit 1

# Use entrypoint
CMD ["/app/entrypoint.sh"]
