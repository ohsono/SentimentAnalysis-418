services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ucla-sentiment-postgres
    environment:
      POSTGRES_DB: ucla_sentiment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sentiment_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/init_scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - sentiment-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ucla_sentiment"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    container_name: ucla-sentiment-redis
    command: redis-server --appendonly yes --requirepass sentiment_redis_2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sentiment-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Main API Service (enhanced with failsafe features)
  dateway-api:
    build:
      context: .
      dockerfile: Dockerfile.gateway-api
    container_name: ucla-sentiment-gateway-api
    ports:
      - "8888:8888"
    environment:
      # Database configuration
      - POSTGRES_URL=postgresql://ucla_app_user:app_user_pwd_123@34.169.131.162:5432/ucla_sentiment_dev
      - POSTGRES_HOST=34.169.131.162
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ucla_sentiment
      - POSTGRES_USER=ucla_app_user
      - POSTGRES_PASSWORD=app_user_pwd_123
      
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=sentiment_redis_2024
      # GCP
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/key.json
      
      # Model service configuration
      - MODEL_SERVICE_URL=http://model-service:8081
      - MODEL_SERVICE_MODE=external
      
      # Failsafe configuration
      - FAILSAFE_MAX_LLM_FAILURES=3
      - FAILSAFE_FAILURE_WINDOW_SECONDS=300
      - FAILSAFE_CIRCUIT_BREAKER_TIMEOUT=60
      - FALLBACK_TO_VADER=true
      
      # API configuration
      - API_HOST=0.0.0.0
      - API_PORT=8888
      - PYTHONPATH=/app
      - ENV=production
    volumes:
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/logs:/ap/Volume/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/logs
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/config:/ap/Volume/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/config
      - ~/.gcp/ucla-sentiment-key.json:/app/credentials/key.json:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      model-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8888/health', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    networks:
      - sentiment-network

  # Lightweight Model Service (swappable LLM inference)
  model-service:
    build:
      context: .
      dockerfile: Dockerfile.model-service
    container_name: ucla-sentiment-model-service
    ports:
      - "8081:8081"
    environment:
      # Model configuration
      - PRELOAD_MODEL=distilbert-sentiment
      - HF_HOME=/app/models
      - TRANSFORMERS_CACHE=/app/models
      - TORCH_HOME=/app/models
      
      # Service configuration
      - HOST=0.0.0.0
      - PORT=8081
      - PYTHONPATH=/app
      - MODEL_SERVICE_MODE=true
      
      # Performance tuning
      - OMP_NUM_THREADS=2
      - MKL_NUM_THREADS=2
    volumes:
      - model_cache:/app/models
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/logs:/ap/Volume/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8081/health', timeout=10)"]
      interval: 45s
      timeout: 15s
      retries: 3
      start_period: 180s  # Allow time for model downloads
    networks:
      - sentiment-network
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Background worker for async data processing
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: ucla-sentiment-worker
    environment:
      # Database configuration
      - POSTGRES_URL=postgresql://ucla_app_user:app_user_pwd_123@34.169.131.162:5432/ucla_sentiment_dev
      - POSTGRES_HOST=34.169.131.162
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ucla_sentiment
      - POSTGRES_USER=ucla_app_user
      - POSTGRES_PASSWORD=app_user_pwd_123
      
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=sentiment_redis_2024
      
      # Worker configuration
      - CELERY_BROKER_URL=redis://:sentiment_redis_2024@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:sentiment_redis_2024@redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/logs:/ap/Volume/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sentiment-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # Optional: Streamlit Dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: ucla-sentiment-dashboard
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8888
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      # Database configuration
      - POSTGRES_HOST=34.169.131.162
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ucla_sentiment
      - POSTGRES_USER=ucla_app_user
      - POSTGRES_PASSWORD=app_user_pwd_123!

    volumes:
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/app/dashboard/Volume/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/app/dashboard
    depends_on:
      - gateway-api
    restart: unless-stopped
    networks:
      - sentiment-network
    profiles:
      - dashboard  # Optional service, start with: docker-compose --profile dashboard up

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ucla-sentiment-prometheus
    ports:
      - "9090:9090"
    volumes:
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - sentiment-network
    profiles:
      - monitoring  # Optional service

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ucla-sentiment-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=sentiment_admin_2024
    volumes:
      - grafana_data:/var/lib/grafana
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - /Volumes/T7_touch/Projects/UCLA-MASDS/SentimentAnalysis-418/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - sentiment-network
    profiles:
      - monitoring  # Optional service

# Persistent volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  model_cache:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# Networks
networks:
  sentiment-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Health check for the entire stack
x-healthcheck-common: &healthcheck-common
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s
